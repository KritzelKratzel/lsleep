nuget {
	nuspec {
		id = lsleep;
		title: lsleep module for Lua;
		version: 1.2.000.7;
		authors: {coapp, Andrew Starks, Tightrope Media Systems};
		owners: {Tightrope Media Systems};
		licenseUrl: "http://opensource.org/licenses/MIT";
		releaseNotes: {@"Now supports only nano time. Uses getperformancecounter and getperformancefrequency for 'time', which is not adjusted to match system time. This library should be renamed to clock and merged in with mediacircus clock."}; 
		requireLicenseAcceptance:false;
		summary: "A simple nanotime sleep module for lua. Fixed math problems.";
		copyright: "Copyright 2013-2014 Tightrope Media Systems, Saint Paul, Minnesota";
		tags: {native, Lua, module};
		description: {
@"lsleep is a cross-platform, high performance sleep timer for lua. It uses the operating system's (Windows/Mac/Linux) native sleep facility to pause Lua execution for a specified time. This version looses the lower-resolution version and adds time, which returns ticks."};
	};
dependencies {
        // This node defines any outside items which may be needed to consume this package.
        packages : {
            // This is a list of other NuGet packages required to use this package.
            // Each item follows the format "<pkg_name>/<version>"
			// greater or equal to 5.3 (https://docs.nuget.org/create/versioning)
            lua/"5.3",
        };
    };
	files {
		docs : {
			#destination = {"${d_docs}\lsleep"};
			{"doc\**\*"};
		};
		
		mypdb: { 
            // copies the whole folder tree.
            #add-all-files : Items.lsleepPdb;
            // set the destination in the package itself. 
			#destination : ${build_root}\${conditionFolder}\pdbs;
        };
		
		[x64, Release] {
        	bin: {"x64\Release\lsleep.dll"};
        	mypdb: {x64\Release\lsleep.pdb};
        };
		
		[x64, Debug] {
        	bin: {"x64\Debug\lsleep.dll"};
        	mypdb: {x64\Debug\lsleep.pdb};
        };
		
        [win32, Release]{
        	bin: {"Win32\Release\lsleep.dll"};
        	mypdb: {"Win32\Release\lsleep.pdb"};
        }
		
		[win32, Debug]{
        	bin: {"Win32\Debug\lsleep.dll"};
        	mypdb: {"Win32\Debug\lsleep.pdb"};
        }
    };
	
	targets {
		AfterBuild {
			.Copy {
				DestinationFolder = "$(TargetDir)";
				SourceFiles = "@(lsleepPdb)";
				SkipUnchangedFiles = true;
				UseHardlinksIfPossible = true;
			};
		};
	};
}